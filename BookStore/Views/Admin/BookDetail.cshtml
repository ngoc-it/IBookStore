@using BookStore.Constant;
@using BookStore.Models.Data;
@model Book

@{
    ViewData["Title"] = "QUẢN LÝ SÁCH";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    ViewBag.Menu = 3;
}

@section css {
    <style>
        /* Thiết lập cơ bản cho form quản lý sách */
    .book-detail {
        margin-top: 20px;
    }

    .card {
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    /* Dành cho phần ảnh bìa sách */
    .img-book-upload {
        height: 300px;
        background-color: #f8f9fa;
        border-radius: 5px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        overflow: hidden;
    }

    .img-book-upload img {
        object-fit: cover;
        border-radius: 5px;
    }

    .img-book-upload input[type="file"] {
        display: none;
    }

    /* Điều chỉnh cho các label */
    .form-label {
        font-weight: bold;
        font-size: 1rem;
        color: #333;
    }

    /* Điều chỉnh cho các input và textarea */
    .form-control, .form-select {
        border-radius: 5px;
        border: 1px solid #ced4da;
        padding: 10px;
        font-size: 1rem;
    }

    .form-control:focus, .form-select:focus {
        box-shadow: 0 0 5px rgba(0, 123, 255, 0.25);
        border-color: #80bdff;
    }

    /* Điều chỉnh cho các nút */
    button.btn {
        padding: 10px 20px;
        border-radius: 5px;
        font-size: 1rem;
    }

    button.btn-outline-secondary {
        background-color: #fff;
        border-color: #6c757d;
    }

    button.btn-outline-secondary:hover {
        background-color: #6c757d;
        color: #fff;
    }

    button.btn-primary {
        background-color: #007bff;
        border-color: #007bff;
    }

    button.btn-primary:hover {
        background-color: #0056b3;
    }

    /* Căn chỉnh phần trạng thái */
    .form-check-label {
        font-size: 1rem;
        color: #333;
    }

    .form-check-input {
        width: 20px;
        height: 20px;
        cursor: pointer;
    }

    /* Tối ưu cho phần thông tin mô tả */
    textarea.form-control {
        min-height: 150px;
    }

    /* Các thông báo lỗi */
    .text-danger {
        font-size: 0.875rem;
        margin-top: 5px;
    }



</style>
}

<div class="d-flex align-items-center">
    <a href="/admin/bookmanagement">
        <i class="menu-icon tf-icons bx bx-arrow-back" style="font-size: 1.5em;"></i>
    </a>

    <h5 class="m-0">Thông tin cuốn sách</h5>
</div>

<div class="card mt-3">
    <div class="card-body">
        @using (@Html.BeginForm("BookDetail", "Admin", FormMethod.Post))
        {
            @Html.HiddenFor(m => m.Id)
            <div class="book-detail row">
                <div class="col-xl-3 col-md-12">
                    <div class="mb-3 me-2">
                        <label class="form-label" for="basic-default-fullname">Ảnh bìa sách</label>
                        <div class="img-book-upload w-100 border">
                            <img id="imgBook" src="/uploads/@(Model.BookImage ?? "img-empty.png")" class="h-100 w-100" alt="Chọn ảnh bìa" />
                            <input type="file" id="inpImgBook" accept=".png,.jpg" onchange="uploadBookImg(this)" hidden />
                        </div>
                        @Html.ValidationMessageFor(m=>m.BookImage, "", new { @class = "text-danger" })
                        @Html.HiddenFor(m => m.BookImage)
                    </div>
                </div>
                <div class="row col-xl-9 col-md-12">
                    <div class="col-xl-4 col-md-12">
                        <div class="mb-3">
                            <label class="form-label" for="basic-default-fullname">Mã sách</label>
                            @Html.TextBoxFor(m => m.BookId, new { @class="form-control", required="required", placeholder="Mã sách", maxlength="12" })
                            @Html.ValidationMessageFor(m=>m.BookId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-xl-8 col-md-12">
                        <div class="mb-3">
                            <label class="form-label" for="basic-default-fullname">Danh mục</label>
                            @Html.DropDownList("CategoryId", (IEnumerable<SelectListItem>) ViewBag.CategoryList, new { @class = "form-select" })
                            @Html.HiddenFor(m => m.CategoryName)
                            @Html.ValidationMessageFor(m=>m.CategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-12 mb-3">
                        <label class="form-label" for="basic-default-fullname">Tên sách (Tiêu đề)</label>
                        @Html.TextBoxFor(m => m.BookName, new { @class="form-control", required="required", maxlength="500", placeholder="Tiêu đề" })
                        @Html.ValidationMessageFor(m=>m.BookName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-xl-4 col-md-12">
                        <div class="mb-3">
                            <label class="form-label" for="basic-default-fullname">Số lượng</label>
                            @Html.TextBoxFor(m => m.Quantity, new { @class="form-control", type="number", required="required", min="0", max="1000", placeholder="Số lượng" })
                            @Html.ValidationMessageFor(m=>m.Quantity, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-xl-4 col-md-12">
                        <div class="mb-3">
                            <label class="form-label" for="basic-default-fullname">Giá sách</label>
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.Price, new { @class="form-control", type="number", required="required", min="0", max="1000000000", placeholder="Giá sách" })
                                <span class="input-group-text">đ</span>
                            </div>
                            @Html.ValidationMessageFor(m=>m.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-xl-4 col-md-12">
                        <div class="mb-3">
                            <label class="form-label" for="basic-default-fullname">Giá khuyến mại</label>
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.PriceDiscount, new { @class="form-control", type="number", min="0", max="1000000000", placeholder="Giá khuyến mại" })
                                <span class="input-group-text">đ</span>
                            </div>
                            @Html.ValidationMessageFor(m=>m.PriceDiscount, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-xl-4 col-md-12">
                        <div class="mb-3">
                            <label class="form-label" for="basic-default-fullname">Tác giả</label>
                            @Html.TextBoxFor(m => m.Author, new { @class="form-control", maxlength="255", placeholder="Tác giả" })
                            @Html.ValidationMessageFor(m=>m.Author, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-xl-4 col-md-12">
                        <div class="mb-3">
                            <label class="form-label" for="basic-default-fullname">Nhà xuất bản</label>
                            @Html.TextBoxFor(m => m.Publisher, new { @class="form-control", maxlength="255", placeholder="Nhà xuất bản" })
                            @Html.ValidationMessageFor(m=>m.Publisher, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    
                    
                   
                </div>
            </div>

            <div class="mb-3">
                <label class="form-label" for="basic-default-message">Thông tin mô tả</label>

                @Html.TextAreaFor(model => model.Description, new { @id = "FullDescription", @class = "form-control" })
                
            </div>

            

            

            <div class="d-flex justify-content-between align-items-center">
                <div class="form-check form-switch">
                    @Html.CheckBoxFor(m => m.IsActive, new { @class="form-check-input" })
                    <label class="form-check-label">Trạng thái</label>
                </div>
                <div class="d-flex">
                    <button type="button" class="btn btn-outline-secondary mx-2" onclick="location.href='/admin/bookmanagement';">Hủy</button>
                    <button type="submit" class="btn btn-primary">Lưu</button>
                </div>
            </div>
            @Html.EditorFor(model => model.CreatedDate, new { @type = "date", @class="d-none hide-cls" })
        }
    </div>
</div>


@section scripts {
    <script type="text/javascript">
        let bookInfoImg = [];

        

        $('.img-book-upload').click(function () {
            $('#inpImgBook')[0].click();
        });

        $('form [name]').focus(function () {
            let attrName = $(this).attr('name');
            $(`span[data-valmsg-for="${attrName}"]`).text('');
        });

        $("#CategoryId").change(function (e) {
            var value = $(this).val();
            var selected = (value == 0 ? '' : $(this).find("option:selected").text());
            $('#CategoryName').val(selected);
        });

        function uploadBookImg(input) {
            if (input.id == 'inpImgBook') {
                $(`span[data-valmsg-for="BookImage"]`).text('');
            }
            else {
                $(`span[data-valmsg-for="InfoImage"]`).text('');
            }

            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    var data = {
                        BookID: '@Model.Id',
                        BookImageUri: e.target.result.split(",")[1]
                    };

                    //call api
                    $.ajax({
                        method: "POST",
                        url: "/admin/UploadImage",
                        data: JSON.stringify(data),
                        dataType: "json",
                        contentType: 'application/json; charset=utf-8',
                        async: true,
                    }).done(function (res) {
                        if (res.success) {
                            if (input.id == 'inpImgBook') {
                                $('#imgBook').attr('src', ('/uploads/' + res.fileName));
                                $('input#BookImage').val(res.fileName);
                            }
                            else {
                                bookInfoImg.push(res.fileName);
                                bindingImageInfo();
                            }
                        } else {
                            showErrorToast('Có lỗi xảy ra trong quá trình xử lý.');
                        }
                    }).fail(function (res) {
                        showErrorToast('Có lỗi xảy ra trong quá trình xử lý.');
                    })
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        
        function deleteBookImg(img) {
            const index = bookInfoImg.indexOf(img);
            if (index > -1) {
                bookInfoImg.splice(index, 1);

                bindingImageInfo();
            }
        }

        function showErrorToast(msg) {
            $('.toast-placement').removeClass('bg-success').addClass('bg-danger');
            $('.toast-placement .title').text('Thất bại');
            $('.toast-placement .toast-body').text(msg);
            $('.toast-placement').toast('show');
        }

        function showSuccessToast(msg) {
            $('.toast-placement').removeClass('bg-danger').addClass('bg-success');
            $('.toast-placement .title').text('Thành công');
            $('.toast-placement .toast-body').text(msg);
            $('.toast-placement').toast('show');
        }
    </script>
}